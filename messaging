#!/usr/bin/env bash

# MESSAGING CLIENT

basepath=/messagingrest/v1

instance=emdev
servicekey=sk1

queue=handson
count=${1:-10}

output=silent # or verbose

source ./localutils # getservicekey getval gettoken

# Retrieve service key and parse out relevant sections.
sk=$(getservicekey "${instance}" "${servicekey}")

# Determine API call details for MESSAGING-HTTPREST incl OAuth 2.0 token
messaging=$(getval "${sk}" .messaging)
httprest=$(getval "${messaging}" '.[] | select(.broker.type == "saprestmgw")')
uri=$(getval "${httprest}" .uri)
oauth=$(getval "${httprest}" .oa2)
token=$(gettoken "${oauth}")


# Payload builders ----------------------------------------------------------

build_payload_webhook_subscription () {
  local name=${1}
  local queue=${2}
  local endpoint=${3}
  yq r -j - <<EO_WEBHOOK_SUBSCRIPTION
name: "${name}"
address: "queue:${queue}"
qos: 0
pushConfig:
  type: webhook
  endpoint: "${endpoint}"
  exemptHandshake: true
EO_WEBHOOK_SUBSCRIPTION
}


# Main functions ------------------------------------------------------------

list_webhook_subscriptions () {
  curl \
    --${output} \
    --header "Authorization: Bearer ${token}" \
    --header 'Content-Type: application/json' \
    --request GET \
    "${uri}${basepath}/subscriptions" | jq .
}

create_webhook_subscription () {
  local name=${1}
  local queue=${2}
  local endpoint=${3}
  local payload
  payload=$(build_payload_webhook_subscription "${name}" "${queue}" "${endpoint}")
  curl \
    --${output} \
    --header "Authorization: Bearer ${token}" \
    --header 'Content-Type: application/json' \
    --request POST \
    --data "${payload}" \
    "${uri}${basepath}/subscriptions"
}

create_webhook_subscription webhook1 handson "https://webhook-shiny-mongoose-ky.cfapps.eu10.hana.ondemand.com/webhook1"

list_webhook_subscriptions

